# coding: utf-8

"""
    Knetik Platform API Documentation latest 

    This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.

    OpenAPI spec version: latest 
    Contact: support@knetik.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InvoiceResource(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'billing_address1': 'str',
        'billing_address2': 'str',
        'billing_city_name': 'str',
        'billing_country_name': 'str',
        'billing_full_name': 'str',
        'billing_postal_code': 'str',
        'billing_state_name': 'str',
        'cart_id': 'str',
        'created_date': 'int',
        'currency': 'str',
        'current_fulfillment_status': 'str',
        'current_payment_status': 'str',
        'discount': 'float',
        'email': 'str',
        'external_ref': 'str',
        'fed_tax': 'float',
        'grand_total': 'float',
        'id': 'int',
        'invoice_number': 'str',
        'items': 'list[InvoiceItemResource]',
        'name_prefix': 'str',
        'order_notes': 'str',
        'parent_invoice_id': 'int',
        'payment_method_id': 'int',
        'phone': 'str',
        'phone_number': 'str',
        'shipping': 'float',
        'shipping_address1': 'str',
        'shipping_address2': 'str',
        'shipping_city_name': 'str',
        'shipping_country_name': 'str',
        'shipping_full_name': 'str',
        'shipping_postal_code': 'str',
        'shipping_state_name': 'str',
        'sort': 'int',
        'state_tax': 'float',
        'subtotal': 'float',
        'updated_date': 'int',
        'user': 'SimpleUserResource',
        'vendor_id': 'int',
        'vendor_name': 'str'
    }

    attribute_map = {
        'billing_address1': 'billing_address1',
        'billing_address2': 'billing_address2',
        'billing_city_name': 'billing_city_name',
        'billing_country_name': 'billing_country_name',
        'billing_full_name': 'billing_full_name',
        'billing_postal_code': 'billing_postal_code',
        'billing_state_name': 'billing_state_name',
        'cart_id': 'cart_id',
        'created_date': 'created_date',
        'currency': 'currency',
        'current_fulfillment_status': 'current_fulfillment_status',
        'current_payment_status': 'current_payment_status',
        'discount': 'discount',
        'email': 'email',
        'external_ref': 'external_ref',
        'fed_tax': 'fed_tax',
        'grand_total': 'grand_total',
        'id': 'id',
        'invoice_number': 'invoice_number',
        'items': 'items',
        'name_prefix': 'name_prefix',
        'order_notes': 'order_notes',
        'parent_invoice_id': 'parent_invoice_id',
        'payment_method_id': 'payment_method_id',
        'phone': 'phone',
        'phone_number': 'phone_number',
        'shipping': 'shipping',
        'shipping_address1': 'shipping_address1',
        'shipping_address2': 'shipping_address2',
        'shipping_city_name': 'shipping_city_name',
        'shipping_country_name': 'shipping_country_name',
        'shipping_full_name': 'shipping_full_name',
        'shipping_postal_code': 'shipping_postal_code',
        'shipping_state_name': 'shipping_state_name',
        'sort': 'sort',
        'state_tax': 'state_tax',
        'subtotal': 'subtotal',
        'updated_date': 'updated_date',
        'user': 'user',
        'vendor_id': 'vendor_id',
        'vendor_name': 'vendor_name'
    }

    def __init__(self, billing_address1=None, billing_address2=None, billing_city_name=None, billing_country_name=None, billing_full_name=None, billing_postal_code=None, billing_state_name=None, cart_id=None, created_date=None, currency=None, current_fulfillment_status=None, current_payment_status=None, discount=None, email=None, external_ref=None, fed_tax=None, grand_total=None, id=None, invoice_number=None, items=None, name_prefix=None, order_notes=None, parent_invoice_id=None, payment_method_id=None, phone=None, phone_number=None, shipping=None, shipping_address1=None, shipping_address2=None, shipping_city_name=None, shipping_country_name=None, shipping_full_name=None, shipping_postal_code=None, shipping_state_name=None, sort=None, state_tax=None, subtotal=None, updated_date=None, user=None, vendor_id=None, vendor_name=None):
        """
        InvoiceResource - a model defined in Swagger
        """

        self._billing_address1 = None
        self._billing_address2 = None
        self._billing_city_name = None
        self._billing_country_name = None
        self._billing_full_name = None
        self._billing_postal_code = None
        self._billing_state_name = None
        self._cart_id = None
        self._created_date = None
        self._currency = None
        self._current_fulfillment_status = None
        self._current_payment_status = None
        self._discount = None
        self._email = None
        self._external_ref = None
        self._fed_tax = None
        self._grand_total = None
        self._id = None
        self._invoice_number = None
        self._items = None
        self._name_prefix = None
        self._order_notes = None
        self._parent_invoice_id = None
        self._payment_method_id = None
        self._phone = None
        self._phone_number = None
        self._shipping = None
        self._shipping_address1 = None
        self._shipping_address2 = None
        self._shipping_city_name = None
        self._shipping_country_name = None
        self._shipping_full_name = None
        self._shipping_postal_code = None
        self._shipping_state_name = None
        self._sort = None
        self._state_tax = None
        self._subtotal = None
        self._updated_date = None
        self._user = None
        self._vendor_id = None
        self._vendor_name = None
        self.discriminator = None

        if billing_address1 is not None:
          self.billing_address1 = billing_address1
        if billing_address2 is not None:
          self.billing_address2 = billing_address2
        if billing_city_name is not None:
          self.billing_city_name = billing_city_name
        if billing_country_name is not None:
          self.billing_country_name = billing_country_name
        if billing_full_name is not None:
          self.billing_full_name = billing_full_name
        if billing_postal_code is not None:
          self.billing_postal_code = billing_postal_code
        if billing_state_name is not None:
          self.billing_state_name = billing_state_name
        if cart_id is not None:
          self.cart_id = cart_id
        if created_date is not None:
          self.created_date = created_date
        if currency is not None:
          self.currency = currency
        if current_fulfillment_status is not None:
          self.current_fulfillment_status = current_fulfillment_status
        if current_payment_status is not None:
          self.current_payment_status = current_payment_status
        if discount is not None:
          self.discount = discount
        if email is not None:
          self.email = email
        if external_ref is not None:
          self.external_ref = external_ref
        if fed_tax is not None:
          self.fed_tax = fed_tax
        if grand_total is not None:
          self.grand_total = grand_total
        if id is not None:
          self.id = id
        if invoice_number is not None:
          self.invoice_number = invoice_number
        if items is not None:
          self.items = items
        if name_prefix is not None:
          self.name_prefix = name_prefix
        if order_notes is not None:
          self.order_notes = order_notes
        if parent_invoice_id is not None:
          self.parent_invoice_id = parent_invoice_id
        if payment_method_id is not None:
          self.payment_method_id = payment_method_id
        if phone is not None:
          self.phone = phone
        if phone_number is not None:
          self.phone_number = phone_number
        if shipping is not None:
          self.shipping = shipping
        if shipping_address1 is not None:
          self.shipping_address1 = shipping_address1
        if shipping_address2 is not None:
          self.shipping_address2 = shipping_address2
        if shipping_city_name is not None:
          self.shipping_city_name = shipping_city_name
        if shipping_country_name is not None:
          self.shipping_country_name = shipping_country_name
        if shipping_full_name is not None:
          self.shipping_full_name = shipping_full_name
        if shipping_postal_code is not None:
          self.shipping_postal_code = shipping_postal_code
        if shipping_state_name is not None:
          self.shipping_state_name = shipping_state_name
        if sort is not None:
          self.sort = sort
        if state_tax is not None:
          self.state_tax = state_tax
        if subtotal is not None:
          self.subtotal = subtotal
        if updated_date is not None:
          self.updated_date = updated_date
        if user is not None:
          self.user = user
        if vendor_id is not None:
          self.vendor_id = vendor_id
        if vendor_name is not None:
          self.vendor_name = vendor_name

    @property
    def billing_address1(self):
        """
        Gets the billing_address1 of this InvoiceResource.
        Line one of the customer's billing address

        :return: The billing_address1 of this InvoiceResource.
        :rtype: str
        """
        return self._billing_address1

    @billing_address1.setter
    def billing_address1(self, billing_address1):
        """
        Sets the billing_address1 of this InvoiceResource.
        Line one of the customer's billing address

        :param billing_address1: The billing_address1 of this InvoiceResource.
        :type: str
        """

        self._billing_address1 = billing_address1

    @property
    def billing_address2(self):
        """
        Gets the billing_address2 of this InvoiceResource.
        Line two of the customer's billing address

        :return: The billing_address2 of this InvoiceResource.
        :rtype: str
        """
        return self._billing_address2

    @billing_address2.setter
    def billing_address2(self, billing_address2):
        """
        Sets the billing_address2 of this InvoiceResource.
        Line two of the customer's billing address

        :param billing_address2: The billing_address2 of this InvoiceResource.
        :type: str
        """

        self._billing_address2 = billing_address2

    @property
    def billing_city_name(self):
        """
        Gets the billing_city_name of this InvoiceResource.
        The city for the customer's billing address

        :return: The billing_city_name of this InvoiceResource.
        :rtype: str
        """
        return self._billing_city_name

    @billing_city_name.setter
    def billing_city_name(self, billing_city_name):
        """
        Sets the billing_city_name of this InvoiceResource.
        The city for the customer's billing address

        :param billing_city_name: The billing_city_name of this InvoiceResource.
        :type: str
        """

        self._billing_city_name = billing_city_name

    @property
    def billing_country_name(self):
        """
        Gets the billing_country_name of this InvoiceResource.
        The country for the customer's billing address

        :return: The billing_country_name of this InvoiceResource.
        :rtype: str
        """
        return self._billing_country_name

    @billing_country_name.setter
    def billing_country_name(self, billing_country_name):
        """
        Sets the billing_country_name of this InvoiceResource.
        The country for the customer's billing address

        :param billing_country_name: The billing_country_name of this InvoiceResource.
        :type: str
        """

        self._billing_country_name = billing_country_name

    @property
    def billing_full_name(self):
        """
        Gets the billing_full_name of this InvoiceResource.
        The customer's name for the billing address

        :return: The billing_full_name of this InvoiceResource.
        :rtype: str
        """
        return self._billing_full_name

    @billing_full_name.setter
    def billing_full_name(self, billing_full_name):
        """
        Sets the billing_full_name of this InvoiceResource.
        The customer's name for the billing address

        :param billing_full_name: The billing_full_name of this InvoiceResource.
        :type: str
        """

        self._billing_full_name = billing_full_name

    @property
    def billing_postal_code(self):
        """
        Gets the billing_postal_code of this InvoiceResource.
        The postal code for the customer's billing address

        :return: The billing_postal_code of this InvoiceResource.
        :rtype: str
        """
        return self._billing_postal_code

    @billing_postal_code.setter
    def billing_postal_code(self, billing_postal_code):
        """
        Sets the billing_postal_code of this InvoiceResource.
        The postal code for the customer's billing address

        :param billing_postal_code: The billing_postal_code of this InvoiceResource.
        :type: str
        """

        self._billing_postal_code = billing_postal_code

    @property
    def billing_state_name(self):
        """
        Gets the billing_state_name of this InvoiceResource.
        The state for the customer's billing address

        :return: The billing_state_name of this InvoiceResource.
        :rtype: str
        """
        return self._billing_state_name

    @billing_state_name.setter
    def billing_state_name(self, billing_state_name):
        """
        Sets the billing_state_name of this InvoiceResource.
        The state for the customer's billing address

        :param billing_state_name: The billing_state_name of this InvoiceResource.
        :type: str
        """

        self._billing_state_name = billing_state_name

    @property
    def cart_id(self):
        """
        Gets the cart_id of this InvoiceResource.
        The guid of the cart this invoice came from

        :return: The cart_id of this InvoiceResource.
        :rtype: str
        """
        return self._cart_id

    @cart_id.setter
    def cart_id(self, cart_id):
        """
        Sets the cart_id of this InvoiceResource.
        The guid of the cart this invoice came from

        :param cart_id: The cart_id of this InvoiceResource.
        :type: str
        """

        self._cart_id = cart_id

    @property
    def created_date(self):
        """
        Gets the created_date of this InvoiceResource.
        The date the invoice was created, unix timestamp in seconds

        :return: The created_date of this InvoiceResource.
        :rtype: int
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """
        Sets the created_date of this InvoiceResource.
        The date the invoice was created, unix timestamp in seconds

        :param created_date: The created_date of this InvoiceResource.
        :type: int
        """

        self._created_date = created_date

    @property
    def currency(self):
        """
        Gets the currency of this InvoiceResource.
        The code for the currency invoice prices are in

        :return: The currency of this InvoiceResource.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """
        Sets the currency of this InvoiceResource.
        The code for the currency invoice prices are in

        :param currency: The currency of this InvoiceResource.
        :type: str
        """

        self._currency = currency

    @property
    def current_fulfillment_status(self):
        """
        Gets the current_fulfillment_status of this InvoiceResource.
        The fulfillment status of the invoice

        :return: The current_fulfillment_status of this InvoiceResource.
        :rtype: str
        """
        return self._current_fulfillment_status

    @current_fulfillment_status.setter
    def current_fulfillment_status(self, current_fulfillment_status):
        """
        Sets the current_fulfillment_status of this InvoiceResource.
        The fulfillment status of the invoice

        :param current_fulfillment_status: The current_fulfillment_status of this InvoiceResource.
        :type: str
        """

        self._current_fulfillment_status = current_fulfillment_status

    @property
    def current_payment_status(self):
        """
        Gets the current_payment_status of this InvoiceResource.
        The payment status of the invoice

        :return: The current_payment_status of this InvoiceResource.
        :rtype: str
        """
        return self._current_payment_status

    @current_payment_status.setter
    def current_payment_status(self, current_payment_status):
        """
        Sets the current_payment_status of this InvoiceResource.
        The payment status of the invoice

        :param current_payment_status: The current_payment_status of this InvoiceResource.
        :type: str
        """

        self._current_payment_status = current_payment_status

    @property
    def discount(self):
        """
        Gets the discount of this InvoiceResource.
        The amount of money saved through coupons

        :return: The discount of this InvoiceResource.
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """
        Sets the discount of this InvoiceResource.
        The amount of money saved through coupons

        :param discount: The discount of this InvoiceResource.
        :type: float
        """

        self._discount = discount

    @property
    def email(self):
        """
        Gets the email of this InvoiceResource.
        The customer's email address

        :return: The email of this InvoiceResource.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this InvoiceResource.
        The customer's email address

        :param email: The email of this InvoiceResource.
        :type: str
        """

        self._email = email

    @property
    def external_ref(self):
        """
        Gets the external_ref of this InvoiceResource.
        An external reference to filter on

        :return: The external_ref of this InvoiceResource.
        :rtype: str
        """
        return self._external_ref

    @external_ref.setter
    def external_ref(self, external_ref):
        """
        Sets the external_ref of this InvoiceResource.
        An external reference to filter on

        :param external_ref: The external_ref of this InvoiceResource.
        :type: str
        """

        self._external_ref = external_ref

    @property
    def fed_tax(self):
        """
        Gets the fed_tax of this InvoiceResource.
        The amount of federal tax added

        :return: The fed_tax of this InvoiceResource.
        :rtype: float
        """
        return self._fed_tax

    @fed_tax.setter
    def fed_tax(self, fed_tax):
        """
        Sets the fed_tax of this InvoiceResource.
        The amount of federal tax added

        :param fed_tax: The fed_tax of this InvoiceResource.
        :type: float
        """

        self._fed_tax = fed_tax

    @property
    def grand_total(self):
        """
        Gets the grand_total of this InvoiceResource.
        The final price of the invoice

        :return: The grand_total of this InvoiceResource.
        :rtype: float
        """
        return self._grand_total

    @grand_total.setter
    def grand_total(self, grand_total):
        """
        Sets the grand_total of this InvoiceResource.
        The final price of the invoice

        :param grand_total: The grand_total of this InvoiceResource.
        :type: float
        """

        self._grand_total = grand_total

    @property
    def id(self):
        """
        Gets the id of this InvoiceResource.
        The id of the invoice

        :return: The id of this InvoiceResource.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this InvoiceResource.
        The id of the invoice

        :param id: The id of this InvoiceResource.
        :type: int
        """

        self._id = id

    @property
    def invoice_number(self):
        """
        Gets the invoice_number of this InvoiceResource.
        A reference number for the invoice

        :return: The invoice_number of this InvoiceResource.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """
        Sets the invoice_number of this InvoiceResource.
        A reference number for the invoice

        :param invoice_number: The invoice_number of this InvoiceResource.
        :type: str
        """

        self._invoice_number = invoice_number

    @property
    def items(self):
        """
        Gets the items of this InvoiceResource.
        A list of items within the invoice

        :return: The items of this InvoiceResource.
        :rtype: list[InvoiceItemResource]
        """
        return self._items

    @items.setter
    def items(self, items):
        """
        Sets the items of this InvoiceResource.
        A list of items within the invoice

        :param items: The items of this InvoiceResource.
        :type: list[InvoiceItemResource]
        """

        self._items = items

    @property
    def name_prefix(self):
        """
        Gets the name_prefix of this InvoiceResource.
        The customer's name prefix

        :return: The name_prefix of this InvoiceResource.
        :rtype: str
        """
        return self._name_prefix

    @name_prefix.setter
    def name_prefix(self, name_prefix):
        """
        Sets the name_prefix of this InvoiceResource.
        The customer's name prefix

        :param name_prefix: The name_prefix of this InvoiceResource.
        :type: str
        """

        self._name_prefix = name_prefix

    @property
    def order_notes(self):
        """
        Gets the order_notes of this InvoiceResource.
        Notes about the order

        :return: The order_notes of this InvoiceResource.
        :rtype: str
        """
        return self._order_notes

    @order_notes.setter
    def order_notes(self, order_notes):
        """
        Sets the order_notes of this InvoiceResource.
        Notes about the order

        :param order_notes: The order_notes of this InvoiceResource.
        :type: str
        """

        self._order_notes = order_notes

    @property
    def parent_invoice_id(self):
        """
        Gets the parent_invoice_id of this InvoiceResource.
        The id of an invoice this is a child of

        :return: The parent_invoice_id of this InvoiceResource.
        :rtype: int
        """
        return self._parent_invoice_id

    @parent_invoice_id.setter
    def parent_invoice_id(self, parent_invoice_id):
        """
        Sets the parent_invoice_id of this InvoiceResource.
        The id of an invoice this is a child of

        :param parent_invoice_id: The parent_invoice_id of this InvoiceResource.
        :type: int
        """

        self._parent_invoice_id = parent_invoice_id

    @property
    def payment_method_id(self):
        """
        Gets the payment_method_id of this InvoiceResource.
        The id of a saved payment method used to pay for the invoice

        :return: The payment_method_id of this InvoiceResource.
        :rtype: int
        """
        return self._payment_method_id

    @payment_method_id.setter
    def payment_method_id(self, payment_method_id):
        """
        Sets the payment_method_id of this InvoiceResource.
        The id of a saved payment method used to pay for the invoice

        :param payment_method_id: The payment_method_id of this InvoiceResource.
        :type: int
        """

        self._payment_method_id = payment_method_id

    @property
    def phone(self):
        """
        Gets the phone of this InvoiceResource.
        The customer's phone number

        :return: The phone of this InvoiceResource.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """
        Sets the phone of this InvoiceResource.
        The customer's phone number

        :param phone: The phone of this InvoiceResource.
        :type: str
        """

        self._phone = phone

    @property
    def phone_number(self):
        """
        Gets the phone_number of this InvoiceResource.
        The customer's phone number

        :return: The phone_number of this InvoiceResource.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """
        Sets the phone_number of this InvoiceResource.
        The customer's phone number

        :param phone_number: The phone_number of this InvoiceResource.
        :type: str
        """

        self._phone_number = phone_number

    @property
    def shipping(self):
        """
        Gets the shipping of this InvoiceResource.
        The shipping cost

        :return: The shipping of this InvoiceResource.
        :rtype: float
        """
        return self._shipping

    @shipping.setter
    def shipping(self, shipping):
        """
        Sets the shipping of this InvoiceResource.
        The shipping cost

        :param shipping: The shipping of this InvoiceResource.
        :type: float
        """

        self._shipping = shipping

    @property
    def shipping_address1(self):
        """
        Gets the shipping_address1 of this InvoiceResource.
        Line one of the customer's shipping address

        :return: The shipping_address1 of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_address1

    @shipping_address1.setter
    def shipping_address1(self, shipping_address1):
        """
        Sets the shipping_address1 of this InvoiceResource.
        Line one of the customer's shipping address

        :param shipping_address1: The shipping_address1 of this InvoiceResource.
        :type: str
        """

        self._shipping_address1 = shipping_address1

    @property
    def shipping_address2(self):
        """
        Gets the shipping_address2 of this InvoiceResource.
        Line two of the customer's shipping address

        :return: The shipping_address2 of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_address2

    @shipping_address2.setter
    def shipping_address2(self, shipping_address2):
        """
        Sets the shipping_address2 of this InvoiceResource.
        Line two of the customer's shipping address

        :param shipping_address2: The shipping_address2 of this InvoiceResource.
        :type: str
        """

        self._shipping_address2 = shipping_address2

    @property
    def shipping_city_name(self):
        """
        Gets the shipping_city_name of this InvoiceResource.
        The city for the customer's shipping address

        :return: The shipping_city_name of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_city_name

    @shipping_city_name.setter
    def shipping_city_name(self, shipping_city_name):
        """
        Sets the shipping_city_name of this InvoiceResource.
        The city for the customer's shipping address

        :param shipping_city_name: The shipping_city_name of this InvoiceResource.
        :type: str
        """

        self._shipping_city_name = shipping_city_name

    @property
    def shipping_country_name(self):
        """
        Gets the shipping_country_name of this InvoiceResource.
        The country for the customer's shipping address

        :return: The shipping_country_name of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_country_name

    @shipping_country_name.setter
    def shipping_country_name(self, shipping_country_name):
        """
        Sets the shipping_country_name of this InvoiceResource.
        The country for the customer's shipping address

        :param shipping_country_name: The shipping_country_name of this InvoiceResource.
        :type: str
        """

        self._shipping_country_name = shipping_country_name

    @property
    def shipping_full_name(self):
        """
        Gets the shipping_full_name of this InvoiceResource.
        The customer's name for the shipping address

        :return: The shipping_full_name of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_full_name

    @shipping_full_name.setter
    def shipping_full_name(self, shipping_full_name):
        """
        Sets the shipping_full_name of this InvoiceResource.
        The customer's name for the shipping address

        :param shipping_full_name: The shipping_full_name of this InvoiceResource.
        :type: str
        """

        self._shipping_full_name = shipping_full_name

    @property
    def shipping_postal_code(self):
        """
        Gets the shipping_postal_code of this InvoiceResource.
        The postal code for the customer's shipping address

        :return: The shipping_postal_code of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_postal_code

    @shipping_postal_code.setter
    def shipping_postal_code(self, shipping_postal_code):
        """
        Sets the shipping_postal_code of this InvoiceResource.
        The postal code for the customer's shipping address

        :param shipping_postal_code: The shipping_postal_code of this InvoiceResource.
        :type: str
        """

        self._shipping_postal_code = shipping_postal_code

    @property
    def shipping_state_name(self):
        """
        Gets the shipping_state_name of this InvoiceResource.
        The state for the customer's shipping address

        :return: The shipping_state_name of this InvoiceResource.
        :rtype: str
        """
        return self._shipping_state_name

    @shipping_state_name.setter
    def shipping_state_name(self, shipping_state_name):
        """
        Sets the shipping_state_name of this InvoiceResource.
        The state for the customer's shipping address

        :param shipping_state_name: The shipping_state_name of this InvoiceResource.
        :type: str
        """

        self._shipping_state_name = shipping_state_name

    @property
    def sort(self):
        """
        Gets the sort of this InvoiceResource.
        A number to use in sorting items. default 500.

        :return: The sort of this InvoiceResource.
        :rtype: int
        """
        return self._sort

    @sort.setter
    def sort(self, sort):
        """
        Sets the sort of this InvoiceResource.
        A number to use in sorting items. default 500.

        :param sort: The sort of this InvoiceResource.
        :type: int
        """

        self._sort = sort

    @property
    def state_tax(self):
        """
        Gets the state_tax of this InvoiceResource.
        The amount of state tax added

        :return: The state_tax of this InvoiceResource.
        :rtype: float
        """
        return self._state_tax

    @state_tax.setter
    def state_tax(self, state_tax):
        """
        Sets the state_tax of this InvoiceResource.
        The amount of state tax added

        :param state_tax: The state_tax of this InvoiceResource.
        :type: float
        """

        self._state_tax = state_tax

    @property
    def subtotal(self):
        """
        Gets the subtotal of this InvoiceResource.
        The sum price of all items before shipping, coupons and tax

        :return: The subtotal of this InvoiceResource.
        :rtype: float
        """
        return self._subtotal

    @subtotal.setter
    def subtotal(self, subtotal):
        """
        Sets the subtotal of this InvoiceResource.
        The sum price of all items before shipping, coupons and tax

        :param subtotal: The subtotal of this InvoiceResource.
        :type: float
        """

        self._subtotal = subtotal

    @property
    def updated_date(self):
        """
        Gets the updated_date of this InvoiceResource.
        The date the invoice was last updated, unix timestamp in seconds

        :return: The updated_date of this InvoiceResource.
        :rtype: int
        """
        return self._updated_date

    @updated_date.setter
    def updated_date(self, updated_date):
        """
        Sets the updated_date of this InvoiceResource.
        The date the invoice was last updated, unix timestamp in seconds

        :param updated_date: The updated_date of this InvoiceResource.
        :type: int
        """

        self._updated_date = updated_date

    @property
    def user(self):
        """
        Gets the user of this InvoiceResource.
        The owner of the invoice

        :return: The user of this InvoiceResource.
        :rtype: SimpleUserResource
        """
        return self._user

    @user.setter
    def user(self, user):
        """
        Sets the user of this InvoiceResource.
        The owner of the invoice

        :param user: The user of this InvoiceResource.
        :type: SimpleUserResource
        """

        self._user = user

    @property
    def vendor_id(self):
        """
        Gets the vendor_id of this InvoiceResource.
        The id of the vendor

        :return: The vendor_id of this InvoiceResource.
        :rtype: int
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id):
        """
        Sets the vendor_id of this InvoiceResource.
        The id of the vendor

        :param vendor_id: The vendor_id of this InvoiceResource.
        :type: int
        """

        self._vendor_id = vendor_id

    @property
    def vendor_name(self):
        """
        Gets the vendor_name of this InvoiceResource.
        The name of the invoice

        :return: The vendor_name of this InvoiceResource.
        :rtype: str
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """
        Sets the vendor_name of this InvoiceResource.
        The name of the invoice

        :param vendor_name: The vendor_name of this InvoiceResource.
        :type: str
        """

        self._vendor_name = vendor_name

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InvoiceResource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
