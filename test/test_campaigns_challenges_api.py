# coding: utf-8

"""
    Knetik Platform API Documentation Latest

    This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com

    OpenAPI spec version: Latest
    Contact: support@knetik.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.campaigns_challenges_api import CampaignsChallengesApi


class TestCampaignsChallengesApi(unittest.TestCase):
    """ CampaignsChallengesApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.campaigns_challenges_api.CampaignsChallengesApi()

    def tearDown(self):
        pass

    def test_create_challenge_activity_using_post(self):
        """
        Test case for create_challenge_activity_using_post

        Create a challenge activity
        """
        pass

    def test_create_challenge_template_using_post(self):
        """
        Test case for create_challenge_template_using_post

        Create a challenge template
        """
        pass

    def test_create_challenge_using_post(self):
        """
        Test case for create_challenge_using_post

        Create a challenge
        """
        pass

    def test_delete_challenge_activity_using_delete(self):
        """
        Test case for delete_challenge_activity_using_delete

        Delete a challenge activity
        """
        pass

    def test_delete_challenge_event_using_delete(self):
        """
        Test case for delete_challenge_event_using_delete

        Delete a challenge event
        """
        pass

    def test_delete_challenge_template_using_delete(self):
        """
        Test case for delete_challenge_template_using_delete

        Delete a challenge template
        """
        pass

    def test_delete_challenge_using_delete(self):
        """
        Test case for delete_challenge_using_delete

        Delete a challenge
        """
        pass

    def test_get_activities_using_get1(self):
        """
        Test case for get_activities_using_get1

        List and search challenge activities
        """
        pass

    def test_get_challenge_activity_using_get(self):
        """
        Test case for get_challenge_activity_using_get

        Get a single challenge activity
        """
        pass

    def test_get_challenge_event_using_get(self):
        """
        Test case for get_challenge_event_using_get

        Retrieve a single challenge event details
        """
        pass

    def test_get_challenge_eventss_using_get(self):
        """
        Test case for get_challenge_eventss_using_get

        Retrieve a list of challenge events
        """
        pass

    def test_get_challenge_template_using_get(self):
        """
        Test case for get_challenge_template_using_get

        Get a single challenge template
        """
        pass

    def test_get_challenge_templates_using_get(self):
        """
        Test case for get_challenge_templates_using_get

        List and search challenge templates
        """
        pass

    def test_get_challenge_using_get(self):
        """
        Test case for get_challenge_using_get

        Retrieve a single challenge details
        """
        pass

    def test_get_challenges_using_get1(self):
        """
        Test case for get_challenges_using_get1

        Retrieve a list of challenges
        """
        pass

    def test_update_challenge_activity_using_put(self):
        """
        Test case for update_challenge_activity_using_put

        Update a challenge activity
        """
        pass

    def test_update_challenge_template_using_put(self):
        """
        Test case for update_challenge_template_using_put

        Update a challenge template
        """
        pass

    def test_update_challenge_using_put(self):
        """
        Test case for update_challenge_using_put

        Update a challenge's information
        """
        pass


if __name__ == '__main__':
    unittest.main()
