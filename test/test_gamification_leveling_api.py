# coding: utf-8

"""
    Knetik Platform API Documentation latest 

    This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com

    OpenAPI spec version: latest 
    Contact: support@knetik.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import knetik_cloud
from knetik_cloud.rest import ApiException
from knetik_cloud.apis.gamification_leveling_api import GamificationLevelingApi


class TestGamificationLevelingApi(unittest.TestCase):
    """ GamificationLevelingApi unit test stubs """

    def setUp(self):
        self.api = knetik_cloud.apis.gamification_leveling_api.GamificationLevelingApi()

    def tearDown(self):
        pass

    def test_create_level(self):
        """
        Test case for create_level

        Create a level schema
        """
        pass

    def test_delete_level(self):
        """
        Test case for delete_level

        Delete a level
        """
        pass

    def test_get_level(self):
        """
        Test case for get_level

        Retrieve a level
        """
        pass

    def test_get_level_triggers(self):
        """
        Test case for get_level_triggers

        Get the list of triggers that can be used to trigger a leveling progress update
        """
        pass

    def test_get_levels(self):
        """
        Test case for get_levels

        List and search levels
        """
        pass

    def test_get_user_level(self):
        """
        Test case for get_user_level

        Get a user's progress for a given level schema
        """
        pass

    def test_get_user_levels(self):
        """
        Test case for get_user_levels

        Get a user's progress for all level schemas
        """
        pass

    def test_update_level(self):
        """
        Test case for update_level

        Update a level
        """
        pass

    def test_update_user_level(self):
        """
        Test case for update_user_level

        Update or create a leveling progress record for a user
        """
        pass


if __name__ == '__main__':
    unittest.main()
